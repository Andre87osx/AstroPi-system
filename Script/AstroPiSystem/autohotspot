#!/bin/bash
#version 0.961-N/HS

#You may share this script on the condition a reference to RaspberryConnect.com 
#must be included in copies or derivatives of this script. 

#A script to switch between a wifi network and a non internet routed Hotspot
#Works at startup or with a seperate timer or manually without a reboot
#Other setup required find out more at
#http://www.raspberryconnect.com

#The script has been adapted for the AstroPi system 
#for malfunctions using the AstroPi project issue page

#Export display to user session for view graphical message
export DISPLAY=":0"

wifidev="wlan0" #device name to use. Default is wlan0.
#use the command: iw dev ,to see wifi interface name 

IFSdef=$IFS
cnt=0
date=$(date +"date : %Y/%m/%d and time : %H:%M:%S")

setupSysTime()
{
sysTime=$(env DISPLAY=:0.0 zenity --forms --width=400 --height=200 --title="AstroPi system" --text="<b>Set-up manually date and time</b>" \
		        --add-entry="Date yyyy-mm-dd" \
		        --add-entry="Time hh:mm:ss"
	     )

case $? in
    0)
    day=$(echo "$sysTime" | cut -d'|' -f1)
		hour=$(echo "$sysTime" | cut -d'|' -f2)
		echo $password | sudo -s date -s "'$day" "$hour'"
		case $? in
            0) zenity --info --width=400 --height=200  --title="AstroPi system" --text="The date and time have been updated correctly\nCurrent $date" && exit
			      ;;
			      1) zenity --error --width=400 --height=200  --title="AstroPi system" --text="Something went wrong by updating the date and time\nCurrent $date" && exit
			      ;;
			      esac
    ;;
	1) zenity --info --width=400 --height=200  --title="AstroPi system" --text="No changes to your watch!"
	;;
	-1) zenity --error --width=400 --height=200  --title="AstroPi system" --text="Something went wrong"
	;;
esac
}

createAdHocNetwork()
{
    echo "Creating Hotspot"
    ip link set dev "$wifidev" down
    ip a add 10.0.0.5/24 brd + dev "$wifidev"
    ip link set dev "$wifidev" up
    dhcpcd -k "$wifidev" >/dev/null 2>&1
    systemctl start dnsmasq
    systemctl start hostapd
}

#Create AstroPi Hotspot
if systemctl status hostapd | grep "(running)" >/dev/null 2>&1; then
        echo "Hostspot already active"
	    setupSysTime
    elif { wpa_cli status | grep "$wifidev"; } >/dev/null 2>&1; then
        echo "Cleaning wifi files and Activating Hotspot"
        wpa_cli terminate >/dev/null 2>&1
        ip addr flush "$wifidev"
        ip link set dev "$wifidev" down
        rm -r /var/run/wpa_supplicant >/dev/null 2>&1
        createAdHocNetwork
	    setupSysTime
   else #"No SSID, activating Hotspot"
        createAdHocNetwork
	    setupSysTime
fi